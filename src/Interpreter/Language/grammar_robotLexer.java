// Generated from C:/Users/User/IdeaProjects/RobotGP/RobotGP/src/Language/grammar_robot.g4 by ANTLR 4.13.1
package Interpreter.Language;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class grammar_robotLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		AND=1, OR=2, NOT=3, AS=4, COMMA=5, SEMI=6, LPAREN=7, RPAREN=8, LCURLY=9, 
		RCURLY=10, EQ=11, LT=12, GT=13, LE=14, GE=15, NE=16, PLUS=17, MINUS=18, 
		DIVISION=19, MULTIPLY=20, MODULO=21, TRUE=22, FALSE=23, OUT=24, IN=25, 
		MAIN=26, WHILE=27, IF=28, ELSE=29, FLOAT=30, INT=31, ID=32, WS=33;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"AND", "OR", "NOT", "AS", "COMMA", "SEMI", "LPAREN", "RPAREN", "LCURLY", 
			"RCURLY", "EQ", "LT", "GT", "LE", "GE", "NE", "PLUS", "MINUS", "DIVISION", 
			"MULTIPLY", "MODULO", "TRUE", "FALSE", "OUT", "IN", "MAIN", "WHILE", 
			"IF", "ELSE", "FLOAT", "INT", "ID", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'AND'", "'OR'", "'NOT'", "'='", "','", "';'", "'('", "')'", "'{'", 
			"'}'", "'=='", "'<'", "'>'", "'<='", "'>='", "'!='", "'+'", "'-'", "'/'", 
			"'*'", "'%'", "'true'", "'false'", "'out'", "'in'", "'main()'", "'while'", 
			"'if'", "'else'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "AND", "OR", "NOT", "AS", "COMMA", "SEMI", "LPAREN", "RPAREN", 
			"LCURLY", "RCURLY", "EQ", "LT", "GT", "LE", "GE", "NE", "PLUS", "MINUS", 
			"DIVISION", "MULTIPLY", "MODULO", "TRUE", "FALSE", "OUT", "IN", "MAIN", 
			"WHILE", "IF", "ELSE", "FLOAT", "INT", "ID", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public grammar_robotLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "grammar_robot.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000!\u00c8\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001"+
		"\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001"+
		"\u0007\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001\n\u0001"+
		"\n\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u000f\u0001"+
		"\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001"+
		"\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001"+
		"\u0015\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0016\u0001"+
		"\u0016\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0017\u0001"+
		"\u0017\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001"+
		"\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u001a\u0001"+
		"\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001b\u0001"+
		"\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001"+
		"\u001c\u0001\u001d\u0003\u001d\u009f\b\u001d\u0001\u001d\u0005\u001d\u00a2"+
		"\b\u001d\n\u001d\f\u001d\u00a5\t\u001d\u0001\u001d\u0001\u001d\u0001\u001d"+
		"\u0004\u001d\u00aa\b\u001d\u000b\u001d\f\u001d\u00ab\u0001\u001e\u0003"+
		"\u001e\u00af\b\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0005\u001e\u00b4"+
		"\b\u001e\n\u001e\f\u001e\u00b7\t\u001e\u0003\u001e\u00b9\b\u001e\u0001"+
		"\u001f\u0001\u001f\u0005\u001f\u00bd\b\u001f\n\u001f\f\u001f\u00c0\t\u001f"+
		"\u0001 \u0004 \u00c3\b \u000b \f \u00c4\u0001 \u0001 \u0000\u0000!\u0001"+
		"\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007"+
		"\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d"+
		"\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/"+
		"\u00181\u00193\u001a5\u001b7\u001c9\u001d;\u001e=\u001f? A!\u0001\u0000"+
		"\b\u0001\u0000--\u0001\u000009\u0001\u0000..\u0001\u000000\u0001\u0000"+
		"19\u0003\u0000AZ__az\u0004\u000009AZ__az\u0003\u0000\t\n\f\r  \u00cf\u0000"+
		"\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000"+
		"\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000"+
		"\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r"+
		"\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011"+
		"\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015"+
		"\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019"+
		"\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d"+
		"\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001"+
		"\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000"+
		"\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000"+
		"\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/"+
		"\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000"+
		"\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000"+
		"\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000="+
		"\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000A\u0001\u0000"+
		"\u0000\u0000\u0001C\u0001\u0000\u0000\u0000\u0003G\u0001\u0000\u0000\u0000"+
		"\u0005J\u0001\u0000\u0000\u0000\u0007N\u0001\u0000\u0000\u0000\tP\u0001"+
		"\u0000\u0000\u0000\u000bR\u0001\u0000\u0000\u0000\rT\u0001\u0000\u0000"+
		"\u0000\u000fV\u0001\u0000\u0000\u0000\u0011X\u0001\u0000\u0000\u0000\u0013"+
		"Z\u0001\u0000\u0000\u0000\u0015\\\u0001\u0000\u0000\u0000\u0017_\u0001"+
		"\u0000\u0000\u0000\u0019a\u0001\u0000\u0000\u0000\u001bc\u0001\u0000\u0000"+
		"\u0000\u001df\u0001\u0000\u0000\u0000\u001fi\u0001\u0000\u0000\u0000!"+
		"l\u0001\u0000\u0000\u0000#n\u0001\u0000\u0000\u0000%p\u0001\u0000\u0000"+
		"\u0000\'r\u0001\u0000\u0000\u0000)t\u0001\u0000\u0000\u0000+v\u0001\u0000"+
		"\u0000\u0000-{\u0001\u0000\u0000\u0000/\u0081\u0001\u0000\u0000\u0000"+
		"1\u0085\u0001\u0000\u0000\u00003\u0088\u0001\u0000\u0000\u00005\u008f"+
		"\u0001\u0000\u0000\u00007\u0095\u0001\u0000\u0000\u00009\u0098\u0001\u0000"+
		"\u0000\u0000;\u009e\u0001\u0000\u0000\u0000=\u00ae\u0001\u0000\u0000\u0000"+
		"?\u00ba\u0001\u0000\u0000\u0000A\u00c2\u0001\u0000\u0000\u0000CD\u0005"+
		"A\u0000\u0000DE\u0005N\u0000\u0000EF\u0005D\u0000\u0000F\u0002\u0001\u0000"+
		"\u0000\u0000GH\u0005O\u0000\u0000HI\u0005R\u0000\u0000I\u0004\u0001\u0000"+
		"\u0000\u0000JK\u0005N\u0000\u0000KL\u0005O\u0000\u0000LM\u0005T\u0000"+
		"\u0000M\u0006\u0001\u0000\u0000\u0000NO\u0005=\u0000\u0000O\b\u0001\u0000"+
		"\u0000\u0000PQ\u0005,\u0000\u0000Q\n\u0001\u0000\u0000\u0000RS\u0005;"+
		"\u0000\u0000S\f\u0001\u0000\u0000\u0000TU\u0005(\u0000\u0000U\u000e\u0001"+
		"\u0000\u0000\u0000VW\u0005)\u0000\u0000W\u0010\u0001\u0000\u0000\u0000"+
		"XY\u0005{\u0000\u0000Y\u0012\u0001\u0000\u0000\u0000Z[\u0005}\u0000\u0000"+
		"[\u0014\u0001\u0000\u0000\u0000\\]\u0005=\u0000\u0000]^\u0005=\u0000\u0000"+
		"^\u0016\u0001\u0000\u0000\u0000_`\u0005<\u0000\u0000`\u0018\u0001\u0000"+
		"\u0000\u0000ab\u0005>\u0000\u0000b\u001a\u0001\u0000\u0000\u0000cd\u0005"+
		"<\u0000\u0000de\u0005=\u0000\u0000e\u001c\u0001\u0000\u0000\u0000fg\u0005"+
		">\u0000\u0000gh\u0005=\u0000\u0000h\u001e\u0001\u0000\u0000\u0000ij\u0005"+
		"!\u0000\u0000jk\u0005=\u0000\u0000k \u0001\u0000\u0000\u0000lm\u0005+"+
		"\u0000\u0000m\"\u0001\u0000\u0000\u0000no\u0005-\u0000\u0000o$\u0001\u0000"+
		"\u0000\u0000pq\u0005/\u0000\u0000q&\u0001\u0000\u0000\u0000rs\u0005*\u0000"+
		"\u0000s(\u0001\u0000\u0000\u0000tu\u0005%\u0000\u0000u*\u0001\u0000\u0000"+
		"\u0000vw\u0005t\u0000\u0000wx\u0005r\u0000\u0000xy\u0005u\u0000\u0000"+
		"yz\u0005e\u0000\u0000z,\u0001\u0000\u0000\u0000{|\u0005f\u0000\u0000|"+
		"}\u0005a\u0000\u0000}~\u0005l\u0000\u0000~\u007f\u0005s\u0000\u0000\u007f"+
		"\u0080\u0005e\u0000\u0000\u0080.\u0001\u0000\u0000\u0000\u0081\u0082\u0005"+
		"o\u0000\u0000\u0082\u0083\u0005u\u0000\u0000\u0083\u0084\u0005t\u0000"+
		"\u0000\u00840\u0001\u0000\u0000\u0000\u0085\u0086\u0005i\u0000\u0000\u0086"+
		"\u0087\u0005n\u0000\u0000\u00872\u0001\u0000\u0000\u0000\u0088\u0089\u0005"+
		"m\u0000\u0000\u0089\u008a\u0005a\u0000\u0000\u008a\u008b\u0005i\u0000"+
		"\u0000\u008b\u008c\u0005n\u0000\u0000\u008c\u008d\u0005(\u0000\u0000\u008d"+
		"\u008e\u0005)\u0000\u0000\u008e4\u0001\u0000\u0000\u0000\u008f\u0090\u0005"+
		"w\u0000\u0000\u0090\u0091\u0005h\u0000\u0000\u0091\u0092\u0005i\u0000"+
		"\u0000\u0092\u0093\u0005l\u0000\u0000\u0093\u0094\u0005e\u0000\u0000\u0094"+
		"6\u0001\u0000\u0000\u0000\u0095\u0096\u0005i\u0000\u0000\u0096\u0097\u0005"+
		"f\u0000\u0000\u00978\u0001\u0000\u0000\u0000\u0098\u0099\u0005e\u0000"+
		"\u0000\u0099\u009a\u0005l\u0000\u0000\u009a\u009b\u0005s\u0000\u0000\u009b"+
		"\u009c\u0005e\u0000\u0000\u009c:\u0001\u0000\u0000\u0000\u009d\u009f\u0007"+
		"\u0000\u0000\u0000\u009e\u009d\u0001\u0000\u0000\u0000\u009e\u009f\u0001"+
		"\u0000\u0000\u0000\u009f\u00a3\u0001\u0000\u0000\u0000\u00a0\u00a2\u0007"+
		"\u0001\u0000\u0000\u00a1\u00a0\u0001\u0000\u0000\u0000\u00a2\u00a5\u0001"+
		"\u0000\u0000\u0000\u00a3\u00a1\u0001\u0000\u0000\u0000\u00a3\u00a4\u0001"+
		"\u0000\u0000\u0000\u00a4\u00a6\u0001\u0000\u0000\u0000\u00a5\u00a3\u0001"+
		"\u0000\u0000\u0000\u00a6\u00a7\u0007\u0002\u0000\u0000\u00a7\u00a9\u0001"+
		"\u0000\u0000\u0000\u00a8\u00aa\u0007\u0001\u0000\u0000\u00a9\u00a8\u0001"+
		"\u0000\u0000\u0000\u00aa\u00ab\u0001\u0000\u0000\u0000\u00ab\u00a9\u0001"+
		"\u0000\u0000\u0000\u00ab\u00ac\u0001\u0000\u0000\u0000\u00ac<\u0001\u0000"+
		"\u0000\u0000\u00ad\u00af\u0007\u0000\u0000\u0000\u00ae\u00ad\u0001\u0000"+
		"\u0000\u0000\u00ae\u00af\u0001\u0000\u0000\u0000\u00af\u00b8\u0001\u0000"+
		"\u0000\u0000\u00b0\u00b9\u0007\u0003\u0000\u0000\u00b1\u00b5\u0007\u0004"+
		"\u0000\u0000\u00b2\u00b4\u0007\u0001\u0000\u0000\u00b3\u00b2\u0001\u0000"+
		"\u0000\u0000\u00b4\u00b7\u0001\u0000\u0000\u0000\u00b5\u00b3\u0001\u0000"+
		"\u0000\u0000\u00b5\u00b6\u0001\u0000\u0000\u0000\u00b6\u00b9\u0001\u0000"+
		"\u0000\u0000\u00b7\u00b5\u0001\u0000\u0000\u0000\u00b8\u00b0\u0001\u0000"+
		"\u0000\u0000\u00b8\u00b1\u0001\u0000\u0000\u0000\u00b9>\u0001\u0000\u0000"+
		"\u0000\u00ba\u00be\u0007\u0005\u0000\u0000\u00bb\u00bd\u0007\u0006\u0000"+
		"\u0000\u00bc\u00bb\u0001\u0000\u0000\u0000\u00bd\u00c0\u0001\u0000\u0000"+
		"\u0000\u00be\u00bc\u0001\u0000\u0000\u0000\u00be\u00bf\u0001\u0000\u0000"+
		"\u0000\u00bf@\u0001\u0000\u0000\u0000\u00c0\u00be\u0001\u0000\u0000\u0000"+
		"\u00c1\u00c3\u0007\u0007\u0000\u0000\u00c2\u00c1\u0001\u0000\u0000\u0000"+
		"\u00c3\u00c4\u0001\u0000\u0000\u0000\u00c4\u00c2\u0001\u0000\u0000\u0000"+
		"\u00c4\u00c5\u0001\u0000\u0000\u0000\u00c5\u00c6\u0001\u0000\u0000\u0000"+
		"\u00c6\u00c7\u0006 \u0000\u0000\u00c7B\u0001\u0000\u0000\u0000\t\u0000"+
		"\u009e\u00a3\u00ab\u00ae\u00b5\u00b8\u00be\u00c4\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}